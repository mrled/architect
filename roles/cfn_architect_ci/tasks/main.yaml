---

- name: Destroy old Architect CI stack
  cloudformation:
    stack_name: "{{ architect_ci_stack_name }}"
    state: "absent"
  when: remove_existing_architect_ci_stack | bool == true

- block:

  - name: Deploy the Architect CI template
    cloudformation:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      stack_name: "{{ architect_ci_stack_name }}"
      state: "present"
      disable_rollback: true
      region: "{{ aws_region }}"
      template: "{{ role_path }}/files/architect.ci.cfn.yaml"
      template_parameters:
        ArchitectUserName: "{{ architect_user }}"
        Ec2InstanceProfileName: "{{ architect_iam_profile_name }}"
        KmsId: "{{ architect_kms_id }}"
        SshClientPublicKey: "{{ lookup('file', client_ssh_public_key_path) }}"
        SshHostEcdsaKeyEncrypted: "{{ architect_ssh_host_ecdsa_key_kmsencrypted }}"
        JenkinsDataVolumeDevice: "{{ architect_docker_volume_device }}"
      tags:
        Environment: Architect
    register: architect_ci_stack_result
    when: skip_architect_ci_stack | bool == false

  rescue:
  - debug: var=architect_ci_stack_result
  - fail:
      msg: Architect CI deployment has failed :(

- name: Read Architect CI stack output
  cloudformation_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    stack_name: "{{ architect_ci_stack_name }}"
    region: "{{ aws_region }}"

- debug:
    var: cloudformation.{{ architect_ci_stack_name }}.stack_outputs

- set_fact:
    architect_ip_address: "{{ cloudformation[architect_ci_stack_name].stack_outputs.ArchitectIpAddress }}"

- name: Save known_hosts file
  copy:
    content: "{{ architect_ip_address }} {{ ssh_host_public_ecdsa_key }}"
    dest: "{{ workdir }}/known_hosts"

