version: "3.5"
services:

  jenkins:
    image: mrled/architect-jenkins:latest
    ports:
      - "80:8080"
      - "443:8443"
    environment:
      - DOCKER_HOST_DOCKER_GID={{ docker_gid }}
    volumes:
      - jenkins_home:/var/jenkins_home
      - jenkins_cert:/var/jenkins_cert

      # Mount this as /var/run/docker.sock in a service container
      # to allow it to control the *host's* docker service
      # See also https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/
      - /var/run/docker.sock:/var/run/docker.sock

    deploy:
      replicas: 1
    command: >
      --httpPort=-1
      --httpsPort=8443
      --httpsCertificate="/var/jenkins_cert/certificates/{{ inflwharf_domain_name }}.crt"
      --httpsPrivateKey="/var/jenkins_cert/certificates/{{ inflwharf_domain_name }}.key"

  inflatable-wharf:
    image: mrled/inflatable-wharf:latest
    deploy:
      replicas: 1
    environment:
      - ACME_LETSENCRYPT_EMAIL={{ inflwharf_letsencrypt_email }}
      - ACME_DOMAIN={{ inflwharf_domain_name }}
      - ACME_DNS_AUTHENTICATOR=route53
      - ACME_SERVER=staging
      - ACME_FREQUENCY=monthly
      - ACME_SECRETS_ENV_FILE=/run/secrets/lego_acme_env_file
    secrets:
      - source: lego_acme_env_file
        target: lego_acme_env_file
        mode: 0444
    volumes:
      - jenkins_cert:/srv/inflatable-wharf

  # backupmanager:
  #   image: alpine:latest
  #   volumes:
  #     - jenkins_home:/var/jenkins_home
  #   deploy:
  #     replicas: 1

volumes:
  jenkins_home:
  jenkins_cert:

secrets:
  lego_acme_env_file:
    file: ./lego-acme-secret-env.txt
