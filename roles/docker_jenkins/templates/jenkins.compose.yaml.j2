version: "3.5"
services:

  architect-jenkins:
    image: mrled/architect-jenkins:{{ archjenks_version }}
    ports:
      - "80:8080"
      - "443:8443"
    environment:
      - DOCKER_HOST_DOCKER_GID={{ docker_gid }}
      - HEALTHCHECK_URL=https://localhost:8443
      - HEALTHCHECK_VERIFY_TLS=false
    volumes:
      - jenkins_home:/var/jenkins_home
      - jenkins_cert:/var/jenkins_cert

      # Mount this as /var/run/docker.sock in a service container
      # to allow it to control the *host's* docker service
      # See also https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/
      - /var/run/docker.sock:/var/run/docker.sock

    deploy:
      replicas: 1
    command: >
      --httpPort=-1
      --httpsPort=8443
      --httpsCertificate="/var/jenkins_cert/certificates/{{ inflwharf_domain_name }}.crt"
      --httpsPrivateKey="/var/jenkins_cert/certificates/{{ inflwharf_domain_name }}.key"

  inflatable-wharf:
    image: mrled/inflatable-wharf:{{ inflwharf_version }}
    deploy:
      replicas: 1
    environment:
      - ACME_LETSENCRYPT_EMAIL={{ inflwharf_letsencrypt_email }}
      - ACME_DOMAIN={{ inflwharf_domain_name }}
      - ACME_DNS_AUTHENTICATOR=route53
      - ACME_LETSENCRYPT_SERVER={{ inflwharf_lets_encrypt_server }}
      - AWS_REGION={{ inflwharf_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ inflwharf_aws_hosted_zone_id }}
    secrets:
      - source: acme_secrets_env_file
        target: acme_secrets_env_file
        mode: 0444
    volumes:
      - jenkins_cert:/srv/inflatable-wharf
    # command: --verbose
    command: --verbose --additional-env-file /run/secrets/acme_secrets_env_file

  bsv:
    image: mrled/bsv:{{ bsv_version }}
    deploy:
      replicas: 1
    environment:
      - BACKUP_SCHEDULE="{{ bsv_backup_schedule }}"
    secrets:
      - source: bsv_aws_secrets_psd1
        target: aws.psd1
        mode: 0400
    volumes:
      - jenkins_home:/srv/backuproot
    configs:
      - source: bsv_config_psd1
        target: /bsv.config.psd1
        mode: 0400
      - source: bsv_gpg_recipient
        target: /recipient.pubkey.gpg
        mode: 0400

volumes:
  jenkins_home:
  jenkins_cert:

# NOTE: To be able to update our secrets and configs
# we must use the name property on each secret/config.
# (The name property requires using version 3.5 of the compose format.)
# We must set the name to change whenever the file is updated,
# so we set it to the hash of the file,
# such that if our files change, so will the name.
# See also: https://blog.viktoradam.net/2018/02/28/swarm-secrets-made-easy/

configs:
  bsv_config_psd1:
    file: "{{ architect_jenkins_bsv_config_psd1 }}"
    name: bsv_config_psd1_${BSV_CONFIG_PSD1_HASH}
  bsv_gpg_recipient:
    file: "{{ architect_jenkins_backup_gpg_recipient_pubkey }}"
    name: bsv_gpg_recipient_pubkey_${BSV_GPG_RECIPIENT_PUBKEY_HASH}

secrets:
  bsv_aws_secrets_psd1:
    file: "{{ architect_jenkins_bsv_aws_secrets_file }}"
    name: bsv_secrets_${BSV_AWS_SECRETS_FILE_HASH}
  acme_secrets_env_file:
    file: "{{ architect_jenkins_swarm_inflwharf_secrets_file }}"
    name: acme_secrets_env_file_${ACME_SECRETS_ENV_FILE_HASH}
