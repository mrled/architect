- name: Run local tasks
  hosts: localhost
  vars_files:
    - architect.cfg
    - architect.vault.cfg

  pre_tasks:
    - block:
      - name: Create working directory
        command: mkdir {{ workdir }}
        args:
          creates: "{{ workdir }}"

      - import_tasks: tasks/process_ssh_client_key.yaml
      - import_tasks: tasks/process_ssh_host_key.yaml

- name: Deploy base server
  hosts: localhost
  vars_files:
    - architect.cfg
    - architect.vault.cfg

  roles:
    - role: cfn_architect_kms
    - role: kms_encrypt_secrets
    - role: cfn_architect_ci

  post_tasks:
    - name: Add new instance to host group
      add_host:
        name: "{{ architect_ip_address }}"
        groups: architect_host,swarm_manager
        ansible_ssh_user: "{{ architect_user }}"
        ansible_python_interpreter: "/usr/bin/python2.7"
        ansible_ssh_private_key_file: "{{ client_ssh_private_key_path }}"
        ansible_ssh_common_args: "-o UserKnownHostsFile={{ known_hosts_file }}"
        cloud_provider: ec2

    - block:
      - name: PWD
        shell: pwd
        register: pwd_result
      - set_fact:
          pwd: "{{ pwd_result.stdout }}"

    - set_fact:
        ssh_cmd: >
          ssh
          -o UserKnownHostsFile={{ pwd }}/{{ workdir }}/known_hosts
          -i {{ pwd }}/{{ client_ssh_private_key_path }}
          {{ architect_user }}@{{ architect_ip_address }}
        ssh_script_path: "{{ pwd }}/{{ workdir }}/ssh-architect.sh"

    - set_fact:
        ssh_script: |
            #!/bin/sh
            set -eu
            {{ ssh_cmd }}
        success_msg: |
            Connecting to Architect, for debugging
            IP address              {{ architect_ip_address }}
            Host ECDSA fingerprint  {{ ssh_host_public_ecdsa_key_fingerprint }}
            SSH connection script   {{ ssh_script_path }}
            SSH command             {{ ssh_cmd }}

    - name: Write SSH connection script
      copy:
        content: "{{ ssh_script }}"
        dest: "{{ ssh_script_path }}"
        mode: 0700

    - name: Success!
      debug:
        msg: "{{ success_msg.split('\n') }}"

- name: Configure server
  hosts: architect_host
  become: true
  vars_files:
    - architect.cfg
    - architect.vault.cfg
  roles:
    - role: docker_jenkins

- name: Deploy Docker Swarm
  import_playbook: docker_swarm2.yaml
